name: build

on:
  push:
    branches:
      - main
      - develop
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  schedule:
    - cron: '0 9 * * 3'
  workflow_dispatch:

jobs:
  run-tests:
    name: run-tests-on-${{matrix.channel}}-${{matrix.target}}
    strategy:
      matrix:
        include:
          - channel: nightly
            target: x86_64-unknown-linux-gnu
            runner: ubuntu-latest
          - channel: stable
            target: x86_64-unknown-linux-gnu
            runner: ubuntu-latest
          - channel: stable
            target: aarch64-unknown-linux-gnu
            runner: ubuntu-latest
          - channel: stable
            target: x86_64-unknown-linux-musl
            runner: ubuntu-latest
          - channel: stable
            target: aarch64-unknown-linux-musl
            runner: ubuntu-latest
          - channel: stable
            target: x86_64-pc-windows-msvc
            runner: windows-latest
          - channel: stable
            target: x86_64-apple-darwin
            runner: macos-latest
          - channel: stable
            target: aarch64-apple-darwin
            runner: macos-latest
          - channel: stable
            target: x86_64-unknown-freebsd
            runner: ubuntu-latest
          - channel: stable
            target: aarch64-unknown-freebsd
            runner: ubuntu-latest
    runs-on: ${{matrix.runner}}
    steps:
      - name: checkout-${{matrix.channel}}-${{matrix.target}}
        uses: actions/checkout@v4
      - name: setup-toolchain-${{matrix.channel}}-${{matrix.target}}
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{matrix.channel}}
          # targets: ${{matrix.target}}
          components: rustfmt
      - name: setup-cross-toolchain-${{matrix.channel}}-${{matrix.target}}
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{matrix.target}}
      - name: cargo-build-${{matrix.channel}}-${{matrix.target}}
        run: cargo build
      - name: cargo-check-${{matrix.channel}}-${{matrix.target}}
        run: cargo check
      - name: cargo-check-formatting-${{matrix.channel}}-${{matrix.target}}
        run: cargo fmt --check
      - name: cargo-test-${{matrix.channel}}-${{matrix.target}}
        run: cargo test --all-features
      # Only for library crates
      # - name: cargo-test-doc-${{matrix.channel}}
      #   run: cargo test --all-features --doc
      - name: cargo-test-examples-${{matrix.channel}}-${{matrix.target}}
        run: cargo test --all-features --examples
